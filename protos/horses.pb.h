// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: horses.proto

#ifndef PROTOBUF_horses_2eproto__INCLUDED
#define PROTOBUF_horses_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_horses_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHorseImpl();
void InitDefaultsHorse();
void InitDefaultsHorsesImpl();
void InitDefaultsHorses();
inline void InitDefaults() {
  InitDefaultsHorse();
  InitDefaultsHorses();
}
}  // namespace protobuf_horses_2eproto
namespace tdpalio {
class Horse;
class HorseDefaultTypeInternal;
extern HorseDefaultTypeInternal _Horse_default_instance_;
class Horses;
class HorsesDefaultTypeInternal;
extern HorsesDefaultTypeInternal _Horses_default_instance_;
}  // namespace tdpalio
namespace tdpalio {

// ===================================================================

class Horse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tdpalio.Horse) */ {
 public:
  Horse();
  virtual ~Horse();

  Horse(const Horse& from);

  inline Horse& operator=(const Horse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Horse(Horse&& from) noexcept
    : Horse() {
    *this = ::std::move(from);
  }

  inline Horse& operator=(Horse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Horse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Horse* internal_default_instance() {
    return reinterpret_cast<const Horse*>(
               &_Horse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Horse* other);
  friend void swap(Horse& a, Horse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Horse* New() const PROTOBUF_FINAL { return New(NULL); }

  Horse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Horse& from);
  void MergeFrom(const Horse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Horse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 capacita = 5;
  int capacita_size() const;
  void clear_capacita();
  static const int kCapacitaFieldNumber = 5;
  ::google::protobuf::uint32 capacita(int index) const;
  void set_capacita(int index, ::google::protobuf::uint32 value);
  void add_capacita(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      capacita() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_capacita();

  // repeated uint32 score = 6;
  int score_size() const;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::uint32 score(int index) const;
  void set_score(int index, ::google::protobuf::uint32 value);
  void add_score(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      score() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_score();

  // string nome = 2;
  void clear_nome();
  static const int kNomeFieldNumber = 2;
  const ::std::string& nome() const;
  void set_nome(const ::std::string& value);
  #if LANG_CXX11
  void set_nome(::std::string&& value);
  #endif
  void set_nome(const char* value);
  void set_nome(const char* value, size_t size);
  ::std::string* mutable_nome();
  ::std::string* release_nome();
  void set_allocated_nome(::std::string* nome);

  // uint32 indice = 1;
  void clear_indice();
  static const int kIndiceFieldNumber = 1;
  ::google::protobuf::uint32 indice() const;
  void set_indice(::google::protobuf::uint32 value);

  // uint32 colore = 3;
  void clear_colore();
  static const int kColoreFieldNumber = 3;
  ::google::protobuf::uint32 colore() const;
  void set_colore(::google::protobuf::uint32 value);

  // uint32 eta = 4;
  void clear_eta();
  static const int kEtaFieldNumber = 4;
  ::google::protobuf::uint32 eta() const;
  void set_eta(::google::protobuf::uint32 value);

  // uint32 selezione = 7;
  void clear_selezione();
  static const int kSelezioneFieldNumber = 7;
  ::google::protobuf::uint32 selezione() const;
  void set_selezione(::google::protobuf::uint32 value);

  // uint32 coscia = 8;
  void clear_coscia();
  static const int kCosciaFieldNumber = 8;
  ::google::protobuf::uint32 coscia() const;
  void set_coscia(::google::protobuf::uint32 value);

  // uint32 infortunio = 9;
  void clear_infortunio();
  static const int kInfortunioFieldNumber = 9;
  ::google::protobuf::uint32 infortunio() const;
  void set_infortunio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tdpalio.Horse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > capacita_;
  mutable int _capacita_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > score_;
  mutable int _score_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nome_;
  ::google::protobuf::uint32 indice_;
  ::google::protobuf::uint32 colore_;
  ::google::protobuf::uint32 eta_;
  ::google::protobuf::uint32 selezione_;
  ::google::protobuf::uint32 coscia_;
  ::google::protobuf::uint32 infortunio_;
  mutable int _cached_size_;
  friend struct ::protobuf_horses_2eproto::TableStruct;
  friend void ::protobuf_horses_2eproto::InitDefaultsHorseImpl();
};
// -------------------------------------------------------------------

class Horses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tdpalio.Horses) */ {
 public:
  Horses();
  virtual ~Horses();

  Horses(const Horses& from);

  inline Horses& operator=(const Horses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Horses(Horses&& from) noexcept
    : Horses() {
    *this = ::std::move(from);
  }

  inline Horses& operator=(Horses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Horses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Horses* internal_default_instance() {
    return reinterpret_cast<const Horses*>(
               &_Horses_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Horses* other);
  friend void swap(Horses& a, Horses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Horses* New() const PROTOBUF_FINAL { return New(NULL); }

  Horses* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Horses& from);
  void MergeFrom(const Horses& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Horses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tdpalio.Horse cavalli = 1;
  int cavalli_size() const;
  void clear_cavalli();
  static const int kCavalliFieldNumber = 1;
  const ::tdpalio::Horse& cavalli(int index) const;
  ::tdpalio::Horse* mutable_cavalli(int index);
  ::tdpalio::Horse* add_cavalli();
  ::google::protobuf::RepeatedPtrField< ::tdpalio::Horse >*
      mutable_cavalli();
  const ::google::protobuf::RepeatedPtrField< ::tdpalio::Horse >&
      cavalli() const;

  // @@protoc_insertion_point(class_scope:tdpalio.Horses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tdpalio::Horse > cavalli_;
  mutable int _cached_size_;
  friend struct ::protobuf_horses_2eproto::TableStruct;
  friend void ::protobuf_horses_2eproto::InitDefaultsHorsesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Horse

// uint32 indice = 1;
inline void Horse::clear_indice() {
  indice_ = 0u;
}
inline ::google::protobuf::uint32 Horse::indice() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.indice)
  return indice_;
}
inline void Horse::set_indice(::google::protobuf::uint32 value) {
  
  indice_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.indice)
}

// string nome = 2;
inline void Horse::clear_nome() {
  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Horse::nome() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.nome)
  return nome_.GetNoArena();
}
inline void Horse::set_nome(const ::std::string& value) {
  
  nome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tdpalio.Horse.nome)
}
#if LANG_CXX11
inline void Horse::set_nome(::std::string&& value) {
  
  nome_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tdpalio.Horse.nome)
}
#endif
inline void Horse::set_nome(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tdpalio.Horse.nome)
}
inline void Horse::set_nome(const char* value, size_t size) {
  
  nome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tdpalio.Horse.nome)
}
inline ::std::string* Horse::mutable_nome() {
  
  // @@protoc_insertion_point(field_mutable:tdpalio.Horse.nome)
  return nome_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Horse::release_nome() {
  // @@protoc_insertion_point(field_release:tdpalio.Horse.nome)
  
  return nome_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Horse::set_allocated_nome(::std::string* nome) {
  if (nome != NULL) {
    
  } else {
    
  }
  nome_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nome);
  // @@protoc_insertion_point(field_set_allocated:tdpalio.Horse.nome)
}

// uint32 colore = 3;
inline void Horse::clear_colore() {
  colore_ = 0u;
}
inline ::google::protobuf::uint32 Horse::colore() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.colore)
  return colore_;
}
inline void Horse::set_colore(::google::protobuf::uint32 value) {
  
  colore_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.colore)
}

// uint32 eta = 4;
inline void Horse::clear_eta() {
  eta_ = 0u;
}
inline ::google::protobuf::uint32 Horse::eta() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.eta)
  return eta_;
}
inline void Horse::set_eta(::google::protobuf::uint32 value) {
  
  eta_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.eta)
}

// repeated uint32 capacita = 5;
inline int Horse::capacita_size() const {
  return capacita_.size();
}
inline void Horse::clear_capacita() {
  capacita_.Clear();
}
inline ::google::protobuf::uint32 Horse::capacita(int index) const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.capacita)
  return capacita_.Get(index);
}
inline void Horse::set_capacita(int index, ::google::protobuf::uint32 value) {
  capacita_.Set(index, value);
  // @@protoc_insertion_point(field_set:tdpalio.Horse.capacita)
}
inline void Horse::add_capacita(::google::protobuf::uint32 value) {
  capacita_.Add(value);
  // @@protoc_insertion_point(field_add:tdpalio.Horse.capacita)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Horse::capacita() const {
  // @@protoc_insertion_point(field_list:tdpalio.Horse.capacita)
  return capacita_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Horse::mutable_capacita() {
  // @@protoc_insertion_point(field_mutable_list:tdpalio.Horse.capacita)
  return &capacita_;
}

// repeated uint32 score = 6;
inline int Horse::score_size() const {
  return score_.size();
}
inline void Horse::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::uint32 Horse::score(int index) const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.score)
  return score_.Get(index);
}
inline void Horse::set_score(int index, ::google::protobuf::uint32 value) {
  score_.Set(index, value);
  // @@protoc_insertion_point(field_set:tdpalio.Horse.score)
}
inline void Horse::add_score(::google::protobuf::uint32 value) {
  score_.Add(value);
  // @@protoc_insertion_point(field_add:tdpalio.Horse.score)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Horse::score() const {
  // @@protoc_insertion_point(field_list:tdpalio.Horse.score)
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Horse::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:tdpalio.Horse.score)
  return &score_;
}

// uint32 selezione = 7;
inline void Horse::clear_selezione() {
  selezione_ = 0u;
}
inline ::google::protobuf::uint32 Horse::selezione() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.selezione)
  return selezione_;
}
inline void Horse::set_selezione(::google::protobuf::uint32 value) {
  
  selezione_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.selezione)
}

// uint32 coscia = 8;
inline void Horse::clear_coscia() {
  coscia_ = 0u;
}
inline ::google::protobuf::uint32 Horse::coscia() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.coscia)
  return coscia_;
}
inline void Horse::set_coscia(::google::protobuf::uint32 value) {
  
  coscia_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.coscia)
}

// uint32 infortunio = 9;
inline void Horse::clear_infortunio() {
  infortunio_ = 0u;
}
inline ::google::protobuf::uint32 Horse::infortunio() const {
  // @@protoc_insertion_point(field_get:tdpalio.Horse.infortunio)
  return infortunio_;
}
inline void Horse::set_infortunio(::google::protobuf::uint32 value) {
  
  infortunio_ = value;
  // @@protoc_insertion_point(field_set:tdpalio.Horse.infortunio)
}

// -------------------------------------------------------------------

// Horses

// repeated .tdpalio.Horse cavalli = 1;
inline int Horses::cavalli_size() const {
  return cavalli_.size();
}
inline void Horses::clear_cavalli() {
  cavalli_.Clear();
}
inline const ::tdpalio::Horse& Horses::cavalli(int index) const {
  // @@protoc_insertion_point(field_get:tdpalio.Horses.cavalli)
  return cavalli_.Get(index);
}
inline ::tdpalio::Horse* Horses::mutable_cavalli(int index) {
  // @@protoc_insertion_point(field_mutable:tdpalio.Horses.cavalli)
  return cavalli_.Mutable(index);
}
inline ::tdpalio::Horse* Horses::add_cavalli() {
  // @@protoc_insertion_point(field_add:tdpalio.Horses.cavalli)
  return cavalli_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tdpalio::Horse >*
Horses::mutable_cavalli() {
  // @@protoc_insertion_point(field_mutable_list:tdpalio.Horses.cavalli)
  return &cavalli_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tdpalio::Horse >&
Horses::cavalli() const {
  // @@protoc_insertion_point(field_list:tdpalio.Horses.cavalli)
  return cavalli_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tdpalio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_horses_2eproto__INCLUDED
