// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jockeys.proto

#include "jockeys.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tdpalio {
class OfferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Offer>
      _instance;
} _Offer_default_instance_;
class JockeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jockey>
      _instance;
} _Jockey_default_instance_;
class JockeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jockeys>
      _instance;
} _Jockeys_default_instance_;
}  // namespace tdpalio
namespace protobuf_jockeys_2eproto {
void InitDefaultsOfferImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tdpalio::_Offer_default_instance_;
    new (ptr) ::tdpalio::Offer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdpalio::Offer::InitAsDefaultInstance();
}

void InitDefaultsOffer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOfferImpl);
}

void InitDefaultsJockeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_jockeys_2eproto::InitDefaultsOffer();
  {
    void* ptr = &::tdpalio::_Jockey_default_instance_;
    new (ptr) ::tdpalio::Jockey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdpalio::Jockey::InitAsDefaultInstance();
}

void InitDefaultsJockey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJockeyImpl);
}

void InitDefaultsJockeysImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_jockeys_2eproto::InitDefaultsJockey();
  {
    void* ptr = &::tdpalio::_Jockeys_default_instance_;
    new (ptr) ::tdpalio::Jockeys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdpalio::Jockeys::InitAsDefaultInstance();
}

void InitDefaultsJockeys() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJockeysImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Offer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Offer, da_chi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Offer, contro_chi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Offer, a_vincere_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Offer, a_perdere_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, indice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, eta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, capacita_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, feelingcontrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, contrada_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, infortunio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockey, offerte_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::Jockeys, fantini_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tdpalio::Offer)},
  { 9, -1, sizeof(::tdpalio::Jockey)},
  { 23, -1, sizeof(::tdpalio::Jockeys)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdpalio::_Offer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdpalio::_Jockey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdpalio::_Jockeys_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "jockeys.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rjockeys.proto\022\007tdpalio\"Q\n\005Offer\022\016\n\006da_"
      "chi\030\001 \001(\005\022\022\n\ncontro_chi\030\002 \001(\005\022\021\n\ta_vince"
      "re\030\003 \001(\005\022\021\n\ta_perdere\030\004 \001(\005\"\264\001\n\006Jockey\022\016"
      "\n\006indice\030\001 \001(\r\022\013\n\003eta\030\002 \001(\r\022\014\n\004nome\030\003 \001("
      "\t\022\020\n\010capacita\030\004 \003(\r\022\r\n\005score\030\005 \003(\r\022\027\n\017fe"
      "elingContrade\030\006 \003(\r\022\020\n\010contrada\030\007 \001(\005\022\022\n"
      "\ninfortunio\030\010 \001(\005\022\037\n\007offerte\030\t \003(\0132\016.tdp"
      "alio.Offer\"+\n\007Jockeys\022 \n\007fantini\030\001 \003(\0132\017"
      ".tdpalio.Jockeyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 343);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "jockeys.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_jockeys_2eproto
namespace tdpalio {

// ===================================================================

void Offer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Offer::kDaChiFieldNumber;
const int Offer::kControChiFieldNumber;
const int Offer::kAVincereFieldNumber;
const int Offer::kAPerdereFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Offer::Offer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_jockeys_2eproto::InitDefaultsOffer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdpalio.Offer)
}
Offer::Offer(const Offer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_chi_, &from.da_chi_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_perdere_) -
    reinterpret_cast<char*>(&da_chi_)) + sizeof(a_perdere_));
  // @@protoc_insertion_point(copy_constructor:tdpalio.Offer)
}

void Offer::SharedCtor() {
  ::memset(&da_chi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_perdere_) -
      reinterpret_cast<char*>(&da_chi_)) + sizeof(a_perdere_));
  _cached_size_ = 0;
}

Offer::~Offer() {
  // @@protoc_insertion_point(destructor:tdpalio.Offer)
  SharedDtor();
}

void Offer::SharedDtor() {
}

void Offer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Offer::descriptor() {
  ::protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Offer& Offer::default_instance() {
  ::protobuf_jockeys_2eproto::InitDefaultsOffer();
  return *internal_default_instance();
}

Offer* Offer::New(::google::protobuf::Arena* arena) const {
  Offer* n = new Offer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Offer::Clear() {
// @@protoc_insertion_point(message_clear_start:tdpalio.Offer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_chi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_perdere_) -
      reinterpret_cast<char*>(&da_chi_)) + sizeof(a_perdere_));
  _internal_metadata_.Clear();
}

bool Offer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdpalio.Offer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 da_chi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &da_chi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 contro_chi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contro_chi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 a_vincere = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_vincere_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 a_perdere = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_perdere_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdpalio.Offer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdpalio.Offer)
  return false;
#undef DO_
}

void Offer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdpalio.Offer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 da_chi = 1;
  if (this->da_chi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->da_chi(), output);
  }

  // int32 contro_chi = 2;
  if (this->contro_chi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->contro_chi(), output);
  }

  // int32 a_vincere = 3;
  if (this->a_vincere() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->a_vincere(), output);
  }

  // int32 a_perdere = 4;
  if (this->a_perdere() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->a_perdere(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdpalio.Offer)
}

::google::protobuf::uint8* Offer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdpalio.Offer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 da_chi = 1;
  if (this->da_chi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->da_chi(), target);
  }

  // int32 contro_chi = 2;
  if (this->contro_chi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->contro_chi(), target);
  }

  // int32 a_vincere = 3;
  if (this->a_vincere() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->a_vincere(), target);
  }

  // int32 a_perdere = 4;
  if (this->a_perdere() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->a_perdere(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdpalio.Offer)
  return target;
}

size_t Offer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdpalio.Offer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 da_chi = 1;
  if (this->da_chi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->da_chi());
  }

  // int32 contro_chi = 2;
  if (this->contro_chi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contro_chi());
  }

  // int32 a_vincere = 3;
  if (this->a_vincere() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a_vincere());
  }

  // int32 a_perdere = 4;
  if (this->a_perdere() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a_perdere());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Offer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdpalio.Offer)
  GOOGLE_DCHECK_NE(&from, this);
  const Offer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Offer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdpalio.Offer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdpalio.Offer)
    MergeFrom(*source);
  }
}

void Offer::MergeFrom(const Offer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdpalio.Offer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_chi() != 0) {
    set_da_chi(from.da_chi());
  }
  if (from.contro_chi() != 0) {
    set_contro_chi(from.contro_chi());
  }
  if (from.a_vincere() != 0) {
    set_a_vincere(from.a_vincere());
  }
  if (from.a_perdere() != 0) {
    set_a_perdere(from.a_perdere());
  }
}

void Offer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdpalio.Offer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Offer::CopyFrom(const Offer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdpalio.Offer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Offer::IsInitialized() const {
  return true;
}

void Offer::Swap(Offer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Offer::InternalSwap(Offer* other) {
  using std::swap;
  swap(da_chi_, other->da_chi_);
  swap(contro_chi_, other->contro_chi_);
  swap(a_vincere_, other->a_vincere_);
  swap(a_perdere_, other->a_perdere_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Offer::GetMetadata() const {
  protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jockey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jockey::kIndiceFieldNumber;
const int Jockey::kEtaFieldNumber;
const int Jockey::kNomeFieldNumber;
const int Jockey::kCapacitaFieldNumber;
const int Jockey::kScoreFieldNumber;
const int Jockey::kFeelingContradeFieldNumber;
const int Jockey::kContradaFieldNumber;
const int Jockey::kInfortunioFieldNumber;
const int Jockey::kOfferteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jockey::Jockey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_jockeys_2eproto::InitDefaultsJockey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdpalio.Jockey)
}
Jockey::Jockey(const Jockey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      capacita_(from.capacita_),
      score_(from.score_),
      feelingcontrade_(from.feelingcontrade_),
      offerte_(from.offerte_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  ::memcpy(&indice_, &from.indice_,
    static_cast<size_t>(reinterpret_cast<char*>(&infortunio_) -
    reinterpret_cast<char*>(&indice_)) + sizeof(infortunio_));
  // @@protoc_insertion_point(copy_constructor:tdpalio.Jockey)
}

void Jockey::SharedCtor() {
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&indice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&infortunio_) -
      reinterpret_cast<char*>(&indice_)) + sizeof(infortunio_));
  _cached_size_ = 0;
}

Jockey::~Jockey() {
  // @@protoc_insertion_point(destructor:tdpalio.Jockey)
  SharedDtor();
}

void Jockey::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Jockey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jockey::descriptor() {
  ::protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jockey& Jockey::default_instance() {
  ::protobuf_jockeys_2eproto::InitDefaultsJockey();
  return *internal_default_instance();
}

Jockey* Jockey::New(::google::protobuf::Arena* arena) const {
  Jockey* n = new Jockey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jockey::Clear() {
// @@protoc_insertion_point(message_clear_start:tdpalio.Jockey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capacita_.Clear();
  score_.Clear();
  feelingcontrade_.Clear();
  offerte_.Clear();
  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&indice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&infortunio_) -
      reinterpret_cast<char*>(&indice_)) + sizeof(infortunio_));
  _internal_metadata_.Clear();
}

bool Jockey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdpalio.Jockey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 indice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 eta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tdpalio.Jockey.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 capacita = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_capacita())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_capacita())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_score())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_score())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 feelingContrade = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_feelingcontrade())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_feelingcontrade())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 contrada = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contrada_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 infortunio = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &infortunio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tdpalio.Offer offerte = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_offerte()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdpalio.Jockey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdpalio.Jockey)
  return false;
#undef DO_
}

void Jockey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdpalio.Jockey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 indice = 1;
  if (this->indice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->indice(), output);
  }

  // uint32 eta = 2;
  if (this->eta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eta(), output);
  }

  // string nome = 3;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.Jockey.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nome(), output);
  }

  // repeated uint32 capacita = 4;
  if (this->capacita_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _capacita_cached_byte_size_));
  }
  for (int i = 0, n = this->capacita_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->capacita(i), output);
  }

  // repeated uint32 score = 5;
  if (this->score_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _score_cached_byte_size_));
  }
  for (int i = 0, n = this->score_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->score(i), output);
  }

  // repeated uint32 feelingContrade = 6;
  if (this->feelingcontrade_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _feelingcontrade_cached_byte_size_));
  }
  for (int i = 0, n = this->feelingcontrade_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->feelingcontrade(i), output);
  }

  // int32 contrada = 7;
  if (this->contrada() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->contrada(), output);
  }

  // int32 infortunio = 8;
  if (this->infortunio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->infortunio(), output);
  }

  // repeated .tdpalio.Offer offerte = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offerte_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->offerte(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdpalio.Jockey)
}

::google::protobuf::uint8* Jockey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdpalio.Jockey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 indice = 1;
  if (this->indice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->indice(), target);
  }

  // uint32 eta = 2;
  if (this->eta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eta(), target);
  }

  // string nome = 3;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.Jockey.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nome(), target);
  }

  // repeated uint32 capacita = 4;
  if (this->capacita_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _capacita_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->capacita_, target);
  }

  // repeated uint32 score = 5;
  if (this->score_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _score_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->score_, target);
  }

  // repeated uint32 feelingContrade = 6;
  if (this->feelingcontrade_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _feelingcontrade_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->feelingcontrade_, target);
  }

  // int32 contrada = 7;
  if (this->contrada() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->contrada(), target);
  }

  // int32 infortunio = 8;
  if (this->infortunio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->infortunio(), target);
  }

  // repeated .tdpalio.Offer offerte = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offerte_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->offerte(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdpalio.Jockey)
  return target;
}

size_t Jockey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdpalio.Jockey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 capacita = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->capacita_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _capacita_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 score = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->score_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _score_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 feelingContrade = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->feelingcontrade_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _feelingcontrade_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tdpalio.Offer offerte = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->offerte_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->offerte(static_cast<int>(i)));
    }
  }

  // string nome = 3;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // uint32 indice = 1;
  if (this->indice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->indice());
  }

  // uint32 eta = 2;
  if (this->eta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eta());
  }

  // int32 contrada = 7;
  if (this->contrada() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contrada());
  }

  // int32 infortunio = 8;
  if (this->infortunio() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->infortunio());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jockey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdpalio.Jockey)
  GOOGLE_DCHECK_NE(&from, this);
  const Jockey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jockey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdpalio.Jockey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdpalio.Jockey)
    MergeFrom(*source);
  }
}

void Jockey::MergeFrom(const Jockey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdpalio.Jockey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capacita_.MergeFrom(from.capacita_);
  score_.MergeFrom(from.score_);
  feelingcontrade_.MergeFrom(from.feelingcontrade_);
  offerte_.MergeFrom(from.offerte_);
  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.indice() != 0) {
    set_indice(from.indice());
  }
  if (from.eta() != 0) {
    set_eta(from.eta());
  }
  if (from.contrada() != 0) {
    set_contrada(from.contrada());
  }
  if (from.infortunio() != 0) {
    set_infortunio(from.infortunio());
  }
}

void Jockey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdpalio.Jockey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jockey::CopyFrom(const Jockey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdpalio.Jockey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jockey::IsInitialized() const {
  return true;
}

void Jockey::Swap(Jockey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jockey::InternalSwap(Jockey* other) {
  using std::swap;
  capacita_.InternalSwap(&other->capacita_);
  score_.InternalSwap(&other->score_);
  feelingcontrade_.InternalSwap(&other->feelingcontrade_);
  offerte_.InternalSwap(&other->offerte_);
  nome_.Swap(&other->nome_);
  swap(indice_, other->indice_);
  swap(eta_, other->eta_);
  swap(contrada_, other->contrada_);
  swap(infortunio_, other->infortunio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jockey::GetMetadata() const {
  protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jockeys::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jockeys::kFantiniFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jockeys::Jockeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_jockeys_2eproto::InitDefaultsJockeys();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdpalio.Jockeys)
}
Jockeys::Jockeys(const Jockeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fantini_(from.fantini_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tdpalio.Jockeys)
}

void Jockeys::SharedCtor() {
  _cached_size_ = 0;
}

Jockeys::~Jockeys() {
  // @@protoc_insertion_point(destructor:tdpalio.Jockeys)
  SharedDtor();
}

void Jockeys::SharedDtor() {
}

void Jockeys::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jockeys::descriptor() {
  ::protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jockeys& Jockeys::default_instance() {
  ::protobuf_jockeys_2eproto::InitDefaultsJockeys();
  return *internal_default_instance();
}

Jockeys* Jockeys::New(::google::protobuf::Arena* arena) const {
  Jockeys* n = new Jockeys;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jockeys::Clear() {
// @@protoc_insertion_point(message_clear_start:tdpalio.Jockeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fantini_.Clear();
  _internal_metadata_.Clear();
}

bool Jockeys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdpalio.Jockeys)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tdpalio.Jockey fantini = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fantini()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdpalio.Jockeys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdpalio.Jockeys)
  return false;
#undef DO_
}

void Jockeys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdpalio.Jockeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdpalio.Jockey fantini = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fantini_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fantini(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdpalio.Jockeys)
}

::google::protobuf::uint8* Jockeys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdpalio.Jockeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdpalio.Jockey fantini = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fantini_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fantini(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdpalio.Jockeys)
  return target;
}

size_t Jockeys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdpalio.Jockeys)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tdpalio.Jockey fantini = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fantini_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fantini(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jockeys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdpalio.Jockeys)
  GOOGLE_DCHECK_NE(&from, this);
  const Jockeys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jockeys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdpalio.Jockeys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdpalio.Jockeys)
    MergeFrom(*source);
  }
}

void Jockeys::MergeFrom(const Jockeys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdpalio.Jockeys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fantini_.MergeFrom(from.fantini_);
}

void Jockeys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdpalio.Jockeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jockeys::CopyFrom(const Jockeys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdpalio.Jockeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jockeys::IsInitialized() const {
  return true;
}

void Jockeys::Swap(Jockeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jockeys::InternalSwap(Jockeys* other) {
  using std::swap;
  fantini_.InternalSwap(&other->fantini_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jockeys::GetMetadata() const {
  protobuf_jockeys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_jockeys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tdpalio

// @@protoc_insertion_point(global_scope)
