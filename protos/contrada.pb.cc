// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contrada.proto

#include "contrada.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tdpalio {
class PContradaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PContrada>
      _instance;
} _PContrada_default_instance_;
class PContradasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PContradas>
      _instance;
} _PContradas_default_instance_;
}  // namespace tdpalio
namespace protobuf_contrada_2eproto {
void InitDefaultsPContradaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tdpalio::_PContrada_default_instance_;
    new (ptr) ::tdpalio::PContrada();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdpalio::PContrada::InitAsDefaultInstance();
}

void InitDefaultsPContrada() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPContradaImpl);
}

void InitDefaultsPContradasImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_contrada_2eproto::InitDefaultsPContrada();
  {
    void* ptr = &::tdpalio::_PContradas_default_instance_;
    new (ptr) ::tdpalio::PContradas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdpalio::PContradas::InitAsDefaultInstance();
}

void InitDefaultsPContradas() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPContradasImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, nome_completo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, indice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, vittorie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, giocatore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, fantino_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContrada, feelings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContradas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdpalio::PContradas, contrade_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tdpalio::PContrada)},
  { 13, -1, sizeof(::tdpalio::PContradas)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdpalio::_PContrada_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdpalio::_PContradas_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "contrada.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016contrada.proto\022\007tdpalio\"\230\001\n\tPContrada\022"
      "\014\n\004nome\030\001 \001(\t\022\025\n\rnome_completo\030\002 \001(\t\022\016\n\006"
      "indice\030\003 \001(\r\022\016\n\006status\030\004 \003(\r\022\020\n\010vittorie"
      "\030\005 \003(\r\022\021\n\tgiocatore\030\006 \001(\r\022\017\n\007fantino\030\007 \001"
      "(\r\022\020\n\010feelings\030\010 \003(\r\"2\n\nPContradas\022$\n\010co"
      "ntrade\030\001 \003(\0132\022.tdpalio.PContradab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "contrada.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_contrada_2eproto
namespace tdpalio {

// ===================================================================

void PContrada::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PContrada::kNomeFieldNumber;
const int PContrada::kNomeCompletoFieldNumber;
const int PContrada::kIndiceFieldNumber;
const int PContrada::kStatusFieldNumber;
const int PContrada::kVittorieFieldNumber;
const int PContrada::kGiocatoreFieldNumber;
const int PContrada::kFantinoFieldNumber;
const int PContrada::kFeelingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PContrada::PContrada()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_contrada_2eproto::InitDefaultsPContrada();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdpalio.PContrada)
}
PContrada::PContrada(const PContrada& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_(from.status_),
      vittorie_(from.vittorie_),
      feelings_(from.feelings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  nome_completo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome_completo().size() > 0) {
    nome_completo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_completo_);
  }
  ::memcpy(&indice_, &from.indice_,
    static_cast<size_t>(reinterpret_cast<char*>(&fantino_) -
    reinterpret_cast<char*>(&indice_)) + sizeof(fantino_));
  // @@protoc_insertion_point(copy_constructor:tdpalio.PContrada)
}

void PContrada::SharedCtor() {
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_completo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&indice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fantino_) -
      reinterpret_cast<char*>(&indice_)) + sizeof(fantino_));
  _cached_size_ = 0;
}

PContrada::~PContrada() {
  // @@protoc_insertion_point(destructor:tdpalio.PContrada)
  SharedDtor();
}

void PContrada::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_completo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PContrada::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PContrada::descriptor() {
  ::protobuf_contrada_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contrada_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PContrada& PContrada::default_instance() {
  ::protobuf_contrada_2eproto::InitDefaultsPContrada();
  return *internal_default_instance();
}

PContrada* PContrada::New(::google::protobuf::Arena* arena) const {
  PContrada* n = new PContrada;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PContrada::Clear() {
// @@protoc_insertion_point(message_clear_start:tdpalio.PContrada)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  vittorie_.Clear();
  feelings_.Clear();
  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_completo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&indice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fantino_) -
      reinterpret_cast<char*>(&indice_)) + sizeof(fantino_));
  _internal_metadata_.Clear();
}

bool PContrada::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdpalio.PContrada)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tdpalio.PContrada.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome_completo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome_completo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome_completo().data(), static_cast<int>(this->nome_completo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tdpalio.PContrada.nome_completo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 indice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_status())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vittorie = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vittorie())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_vittorie())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giocatore = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giocatore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fantino = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fantino_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 feelings = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_feelings())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_feelings())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdpalio.PContrada)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdpalio.PContrada)
  return false;
#undef DO_
}

void PContrada::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdpalio.PContrada)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.PContrada.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nome(), output);
  }

  // string nome_completo = 2;
  if (this->nome_completo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome_completo().data(), static_cast<int>(this->nome_completo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.PContrada.nome_completo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nome_completo(), output);
  }

  // uint32 indice = 3;
  if (this->indice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->indice(), output);
  }

  // repeated uint32 status = 4;
  if (this->status_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _status_cached_byte_size_));
  }
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->status(i), output);
  }

  // repeated uint32 vittorie = 5;
  if (this->vittorie_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vittorie_cached_byte_size_));
  }
  for (int i = 0, n = this->vittorie_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vittorie(i), output);
  }

  // uint32 giocatore = 6;
  if (this->giocatore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->giocatore(), output);
  }

  // uint32 fantino = 7;
  if (this->fantino() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fantino(), output);
  }

  // repeated uint32 feelings = 8;
  if (this->feelings_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _feelings_cached_byte_size_));
  }
  for (int i = 0, n = this->feelings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->feelings(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdpalio.PContrada)
}

::google::protobuf::uint8* PContrada::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdpalio.PContrada)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.PContrada.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nome(), target);
  }

  // string nome_completo = 2;
  if (this->nome_completo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome_completo().data(), static_cast<int>(this->nome_completo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdpalio.PContrada.nome_completo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nome_completo(), target);
  }

  // uint32 indice = 3;
  if (this->indice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->indice(), target);
  }

  // repeated uint32 status = 4;
  if (this->status_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _status_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->status_, target);
  }

  // repeated uint32 vittorie = 5;
  if (this->vittorie_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _vittorie_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vittorie_, target);
  }

  // uint32 giocatore = 6;
  if (this->giocatore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->giocatore(), target);
  }

  // uint32 fantino = 7;
  if (this->fantino() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fantino(), target);
  }

  // repeated uint32 feelings = 8;
  if (this->feelings_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _feelings_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->feelings_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdpalio.PContrada)
  return target;
}

size_t PContrada::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdpalio.PContrada)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 status = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->status_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _status_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vittorie = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vittorie_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vittorie_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 feelings = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->feelings_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _feelings_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nome = 1;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // string nome_completo = 2;
  if (this->nome_completo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome_completo());
  }

  // uint32 indice = 3;
  if (this->indice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->indice());
  }

  // uint32 giocatore = 6;
  if (this->giocatore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giocatore());
  }

  // uint32 fantino = 7;
  if (this->fantino() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fantino());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PContrada::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdpalio.PContrada)
  GOOGLE_DCHECK_NE(&from, this);
  const PContrada* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PContrada>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdpalio.PContrada)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdpalio.PContrada)
    MergeFrom(*source);
  }
}

void PContrada::MergeFrom(const PContrada& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdpalio.PContrada)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  vittorie_.MergeFrom(from.vittorie_);
  feelings_.MergeFrom(from.feelings_);
  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.nome_completo().size() > 0) {

    nome_completo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_completo_);
  }
  if (from.indice() != 0) {
    set_indice(from.indice());
  }
  if (from.giocatore() != 0) {
    set_giocatore(from.giocatore());
  }
  if (from.fantino() != 0) {
    set_fantino(from.fantino());
  }
}

void PContrada::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdpalio.PContrada)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PContrada::CopyFrom(const PContrada& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdpalio.PContrada)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PContrada::IsInitialized() const {
  return true;
}

void PContrada::Swap(PContrada* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PContrada::InternalSwap(PContrada* other) {
  using std::swap;
  status_.InternalSwap(&other->status_);
  vittorie_.InternalSwap(&other->vittorie_);
  feelings_.InternalSwap(&other->feelings_);
  nome_.Swap(&other->nome_);
  nome_completo_.Swap(&other->nome_completo_);
  swap(indice_, other->indice_);
  swap(giocatore_, other->giocatore_);
  swap(fantino_, other->fantino_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PContrada::GetMetadata() const {
  protobuf_contrada_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contrada_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PContradas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PContradas::kContradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PContradas::PContradas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_contrada_2eproto::InitDefaultsPContradas();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdpalio.PContradas)
}
PContradas::PContradas(const PContradas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contrade_(from.contrade_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tdpalio.PContradas)
}

void PContradas::SharedCtor() {
  _cached_size_ = 0;
}

PContradas::~PContradas() {
  // @@protoc_insertion_point(destructor:tdpalio.PContradas)
  SharedDtor();
}

void PContradas::SharedDtor() {
}

void PContradas::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PContradas::descriptor() {
  ::protobuf_contrada_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contrada_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PContradas& PContradas::default_instance() {
  ::protobuf_contrada_2eproto::InitDefaultsPContradas();
  return *internal_default_instance();
}

PContradas* PContradas::New(::google::protobuf::Arena* arena) const {
  PContradas* n = new PContradas;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PContradas::Clear() {
// @@protoc_insertion_point(message_clear_start:tdpalio.PContradas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contrade_.Clear();
  _internal_metadata_.Clear();
}

bool PContradas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdpalio.PContradas)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tdpalio.PContrada contrade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_contrade()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdpalio.PContradas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdpalio.PContradas)
  return false;
#undef DO_
}

void PContradas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdpalio.PContradas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdpalio.PContrada contrade = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contrade_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->contrade(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdpalio.PContradas)
}

::google::protobuf::uint8* PContradas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdpalio.PContradas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdpalio.PContrada contrade = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contrade_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->contrade(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdpalio.PContradas)
  return target;
}

size_t PContradas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdpalio.PContradas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tdpalio.PContrada contrade = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->contrade_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contrade(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PContradas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdpalio.PContradas)
  GOOGLE_DCHECK_NE(&from, this);
  const PContradas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PContradas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdpalio.PContradas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdpalio.PContradas)
    MergeFrom(*source);
  }
}

void PContradas::MergeFrom(const PContradas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdpalio.PContradas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contrade_.MergeFrom(from.contrade_);
}

void PContradas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdpalio.PContradas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PContradas::CopyFrom(const PContradas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdpalio.PContradas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PContradas::IsInitialized() const {
  return true;
}

void PContradas::Swap(PContradas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PContradas::InternalSwap(PContradas* other) {
  using std::swap;
  contrade_.InternalSwap(&other->contrade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PContradas::GetMetadata() const {
  protobuf_contrada_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contrada_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tdpalio

// @@protoc_insertion_point(global_scope)
